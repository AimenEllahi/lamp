/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 Lamp_forExport2.glb --transform
*/

import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { useControls } from 'leva'

export function Lamp(props) {
  const { nodes, materials } = useGLTF('/Models/Lamp_forExport2-transformed.glb')
  const {position, rotation, scale} = useControls('Lamp', {
    position: {  value: [-6.699999999999998,-97.80000000000007,-304.5], step: 0.1 },
    rotation: {  value: [-2.9, 7.6 ,-43.94999999999993], step: 0.1 },
    scale: {  value: -0.01, step: 0.01 },
  })

  return (
    <group position={position} rotation={rotation} scale={scale} {...props} dispose={null}>
      <PerspectiveCamera makeDefault={false} far={10000000000} near={0.01} fov={31.417} position={[0, 14980, 35000]} />
      <mesh geometry={nodes.Cube4.geometry} material={nodes.Cube4.material} position={[2225.309, 15496.436, 11582.736]} scale={[2, 1, 1]} />
      <mesh geometry={nodes.Cube.geometry}  color={"#390023"} />
      <mesh geometry={nodes.objArmcha0.geometry} material={nodes.objArmcha0.material} position={[-11083.768, 4275.211, 101154.48]} rotation={[0, -Math.PI / 2, 0]} scale={20} />
    </group>
  )
}

useGLTF.preload('/Lamp_forExport2-transformed.glb')
